import pytest
from app import app


def test_available_routes():
    """–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤"""
    with app.test_client() as client:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
        routes_to_check = [
            ('/', 'GET', None),
            ('/api/register', 'POST', None),
            ('/api/login', 'POST', None),
            ('/api/feed', 'GET', None),
            ('/api/events/1/register', 'POST', None),
            ('/api/organisations', 'POST', None),
        ]

        print("\nüîç –ü–†–û–í–ï–†–ö–ê –î–û–°–¢–£–ü–ù–´–• –ú–ê–†–®–†–£–¢–û–í:")
        for route, method, data in routes_to_check:
            if method == 'GET':
                response = client.get(route)
            elif method == 'POST':
                response = client.post(route, json=data or {})

            print(f"  {method} {route} -> {response.status_code}")

            # –ú–∞—Ä—à—Ä—É—Ç –¥–æ–ª–∂–µ–Ω —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å (–Ω–µ 404) –∏–ª–∏ —Ç—Ä–µ–±–æ–≤–∞—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401)
            assert response.status_code != 404 or route in ['/api/feed', '/api/events/1/register'], \
                f"–ú–∞—Ä—à—Ä—É—Ç {route} –Ω–µ –Ω–∞–π–¥–µ–Ω (404)"


if __name__ == '__main__':
    pytest.main([__file__, '-v'])